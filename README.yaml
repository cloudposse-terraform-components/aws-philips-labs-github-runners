name: "aws-philips-labs-github-runners"
# Canonical GitHub repo
github_repo: "cloudposse-terraform-components/aws-philips-labs-github-runners"
# Short description of this project
description: |-
  This component provisions the surrounding infrastructure for GitHub self-hosted runners.

  ## Prerequisites

  - GitHub App installed on the organization
    - For more details see
      [Philips Lab's Setting up a GitHub App](https://github.com/philips-labs/terraform-aws-github-runner/tree/main#setup-github-app-part-1)
    - Ensure you create a **PRIVATE KEY** and store it in SSM, **NOT** to be confused with a **Client Secret**. Private
      Keys are created in the GitHub App Configuration and scrolling to the bottom.
  - GitHub App ID and private key stored in SSM under `/pl-github-runners/id` (or the value of
    `var.github_app_id_ssm_path`)
  - GitHub App Private Key stored in SSM (base64 encoded) under `/pl-github-runners/key` (or the value of
    `var.github_app_key_ssm_path`)

  ## Modules

  ### `webhook-github-app`

  This is a fork of https://github.com/philips-labs/terraform-aws-github-runner/tree/main/modules/webhook-github-app.

  We customized it until this PR is resolved as it does not update the GitHub App webhook until this is merged.

  - https://github.com/philips-labs/terraform-aws-github-runner/pull/3625

  This module also requires an environment variable:

  - `GH_TOKEN` â€” a GitHub token must be set

  This module also requires the `gh` CLI to be installed. Your Dockerfile can be updated to include the following to
  install it:

  ```dockerfile
  ARG GH_CLI_VERSION=2.39.1
  # ...
  ARG GH_CLI_VERSION
  RUN apt-get update && apt-get install -y --allow-downgrades \
      gh="${GH_CLI_VERSION}-*"
  ```

  By default, we leave this disabled, as it requires a GitHub token to be set. You can enable it by setting
  `var.enable_update_github_app_webhook` to `true`. When enabled, it will update the GitHub App webhook to point to the
  API Gateway. This can occur if the API Gateway is deleted and recreated.

  When disabled, you will need to manually update the GitHub App webhook to point to the API Gateway. This is output by
  the component, and available via the `webhook` output under `endpoint`.
usage: |-
  **Stack Level**: Regional

  Here's an example snippet for how to use this component.

  ```yaml
  components:
    terraform:
      philips-labs-github-runners:
        vars:
          enabled: true
  ```

  The following will create:

  - An API Gateway
  - Lambdas
  - SQS Queue
  - EC2 Launch Template instances

  The API Gateway is registered as a webhook within the GitHub App, which scales up or down, via Lambdas, the EC2 Launch
  Template by the number of messages in the SQS queue.

  ![Architecture](https://github.com/philips-labs/terraform-aws-github-runner/blob/main/docs/component-overview.svg)
tags:
  - component/philips-labs-github-runners
  - layer/github
  - provider/aws
# Categories of this project
categories:
  - component/philips-labs-github-runners
  - layer/github
  - provider/aws
references:
  - name: cloudposse-terraform-components
    description: "Cloud Posse's upstream component"
    url: https://github.com/orgs/cloudposse-terraform-components/repositories
# License of this project
license: "APACHE2"
# Badges to display
badges:
  - name: Latest Release
    image: https://img.shields.io/github/release/cloudposse-terraform-components/aws-philips-labs-github-runners.svg?style=for-the-badge
    url: https://github.com/cloudposse-terraform-components/aws-philips-labs-github-runners/releases/latest
  - name: Slack Community
    image: https://slack.cloudposse.com/for-the-badge.svg
    url: https://slack.cloudposse.com
related:
  - name: "Cloud Posse Terraform Modules"
    description: Our collection of reusable Terraform modules used by our reference architectures.
    url: "https://docs.cloudposse.com/modules/"
  - name: "Atmos"
    description: "Atmos is like docker-compose but for your infrastructure"
    url: "https://atmos.tools"
contributors: [] # If included generates contribs
